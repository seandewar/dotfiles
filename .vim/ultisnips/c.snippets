################################################################################
#  Sean Dewar's C snippets <https://github.com/seandewar>                      #
################################################################################
extends c-like
priority 1

snippet #once "#include guard"
#ifndef ${1:PROJECT}_${2:FILE}_H
#define $1_$2_H

${0:${VISUAL}}

#endif // $1_$2_H
endsnippet

snippet #in "#include global file"
#include <${1:file.h}>
endsnippet

snippet #inl "#include local file"
#include "${1:`!p snip.rv = snip.basename + '.h'`}"
endsnippet

snippet #if "#if block"
#if ${1:CONDITION}
	${0:${VISUAL}}
#endif
endsnippet

snippet #ifd "#ifdef block"
#ifdef ${1:IDENTIFIER}
	${0:${VISUAL}}
#endif
endsnippet

snippet #ifnd "#ifndef block"
#ifndef ${1:IDENTIFIER}
	${0:${VISUAL}}
#endif
endsnippet

snippet fn "function definition"
${1:void} ${2:my_function}(${3:void})
{
	${0:${VISUAL}}
}
endsnippet

snippet fnp "function declaration (prototype)"
${1:void} ${2:my_function}(${3:void});
endsnippet

snippet main "main() entry point function"
int main(int argc, char* argv[])
{
	${0:${VISUAL}}
	return 0;
}
endsnippet

snippet td "typedef"
typedef ${2:${VISUAL:T}} ${1:My_type};
endsnippet

snippet st "struct"
struct ${1:My_struct} {
	${0:${VISUAL}}
};
endsnippet

snippet tdst "struct typedef"
typedef struct {
	${0:${VISUAL}}
} ${1:My_struct_type};
endsnippet

snippet un "union"
union ${1:My_union} {
	${0:${VISUAL}}
};
endsnippet

snippet tdun "union typedef"
typedef union {
	${0:${VISUAL}}
} ${1:My_union_type};
endsnippet

snippet en "enum"
enum ${1:My_enum} {
	${0:${VISUAL}}
};
endsnippet

snippet tden "enum typedef"
typedef enum {
	${0:${VISUAL}}
} ${1:My_enum_type};
endsnippet
