" use neovim's user runtime instead (relative to the dotfiles directory).
"
" if this file was reloaded, don't source the runtime path compatibility logic
" more than once to avoid cluttering up the 'runtimepath' and to avoid resetting
" 'packpath'.
if !exists('s:was_loaded')
    let s:was_loaded = 1

    let g:conf_neovim_stow_package_dir =
                \ fnamemodify(resolve(expand('<sfile>')), ':p:h:h:h')
                \ .. '/neovim'
    let config_dir = g:conf_neovim_stow_package_dir .. '/.config/nvim'
    let data_dir = g:conf_neovim_stow_package_dir .. '/.local/share/nvim/site'
    let g:conf_minpac_base_dir = data_dir

    " NOTE: by using :set^= and :set+= rather than :let, commas will be added
    " before and after our prepended and appended entries by vim if required
    execute printf('set runtimepath^=%s,%s runtimepath+=%s/after,%s/after',
                 \ config_dir, data_dir, config_dir, data_dir)

    let &packpath = &runtimepath
endif

" use neovim's rc file instead
let s:nvimrc = g:conf_neovim_stow_package_dir .. '/.config/nvim/init.vim'
if filereadable(s:nvimrc)
    execute 'source ' .. s:nvimrc
endif
unlet s:nvimrc
